syntax = "proto3";

package tableflow;
option go_package = "tableflow/types";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

service DataEngine {
  rpc Query(QueryRequest) returns (QueryResponse) {};
  rpc Delete(DeleteRequest) returns (Response) {};
  rpc Update(UpdateRequest) returns (UpdateResponse) {};
  rpc Insert(InsertRequest) returns (InsertResponse) {};
}

service MetadataEngine {
  rpc Get(TableQuery) returns (Table) {};
  rpc Delete(TableQuery) returns (Response) {};
  rpc Update(UpdateMetadataRequest) returns (Response) {};
  rpc Create(Table) returns (Response) {};
}

message TableQuery {
  string tableId = 1;
}

message Table {
  string id = 1;
  repeated HeaderMeta headers = 2;
  string code = 3;
  string workspaceId = 4;
  string name = 5;
  google.protobuf.Timestamp creatAt = 6;
  google.protobuf.Timestamp modifyAt = 7;

  message HeaderMeta {
    string id = 1;
    HeaderType type = 2;
    uint32 index = 3;
    string name = 4;
  }

  enum HeaderType {
    Text = 0;
    Integer = 1;
    Number = 2;
    Date = 3;
    Time = 4;
    Percent = 5;
  }
}

message UpdateMetadataRequest {
  string id = 1;
  Table updated = 2;
}

message QueryRequest {
  string tableId = 1;
  string headerId = 2;
  Options options = 3;
  google.protobuf.Struct query = 4;
}

message Options {
  uint32 page = 1;
  uint32 limit = 2;
  Sort sort = 3;

  enum Sort {
    Asc = 0;
    Desc = 1;
  }
}

message QueryResponse {
  repeated Entry resultSet = 1;
  Status status = 2;
}
enum Status {
  Success = 0;
  Failure = 1;
}
message Entry {
  uint64 rowIdx = 1;
  bytes value = 2;
}

message DeleteRequest {
  string tableId = 1;
  string headerId = 2;
}

message Response {
  Status status = 1;
  string errMsg = 2;
}

message UpdateRequest {
  Action action = 1;
  string tableId = 2;
  string headerId = 3;
  repeated Entry entries = 4;

  enum Action {
    UpdateEntry = 0;
    DeleteEntry = 1;
  }
}

message UpdateResponse {
  Status status = 1;
  string errMsg = 2;
  uint32 affectedEntries = 3;
  uint64 lastRowIdx = 4;
}

message InsertRequest {
  string tableId = 1;
  string headerId = 2;
  repeated Entry entries = 3;
}

message InsertResponse {
  Status status = 1;
  string errMsg = 2;
}