// This file is generated by rust-protobuf 2.27.1. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `connector/dataflow-connector.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_27_1;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\"connector/dataflow-connector.proto\x12\tconnector\x1a\x12common/prob\
    e.proto2\x84\x01\n\x0cConnectorApi\x12<\n\x0bHandleEvent\x12\x14.common.\
    EventRequest\x1a\x15.common.EventResponse\"\0\x126\n\x05Probe\x12\x14.co\
    mmon.ProbeRequest\x1a\x15.common.ProbeResponse\"\0B\x07Z\x05protoJ\xc2\
    \x01\n\x06\x12\x04\0\0\n\x01\n\x08\n\x01\x0c\x12\x03\0\0\x12\n\x08\n\x01\
    \x02\x12\x03\x02\0\x12\n\t\n\x02\x03\0\x12\x03\x03\0\x1c\n\x08\n\x01\x08\
    \x12\x03\x05\0\x1c\n\t\n\x02\x08\x0b\x12\x03\x05\0\x1c\n\n\n\x02\x06\0\
    \x12\x04\x07\0\n\x01\n\n\n\x03\x06\0\x01\x12\x03\x07\x08\x14\n\x0b\n\x04\
    \x06\0\x02\0\x12\x03\x08\x02H\n\x0c\n\x05\x06\0\x02\0\x01\x12\x03\x08\
    \x06\x11\n\x0c\n\x05\x06\0\x02\0\x02\x12\x03\x08\x12%\n\x0c\n\x05\x06\0\
    \x02\0\x03\x12\x03\x080D\n\x0b\n\x04\x06\0\x02\x01\x12\x03\t\x02B\n\x0c\
    \n\x05\x06\0\x02\x01\x01\x12\x03\t\x06\x0b\n\x0c\n\x05\x06\0\x02\x01\x02\
    \x12\x03\t\x0c\x1f\n\x0c\n\x05\x06\0\x02\x01\x03\x12\x03\t*>b\x06proto3\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
